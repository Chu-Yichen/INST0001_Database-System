
-- 1) AGE_GROUP
CREATE TABLE AGE_GROUP (
    age_group_specification VARCHAR(20) NOT NULL,
    -- Four Age Group Specification: '0-18', '18-35', '35-55', '55+'
    CONSTRAINT PK_age_group
        PRIMARY KEY (age_group_specification)
);


-- 2) TIME_PERIOD

CREATE TABLE TIME_PERIOD (
    time_period_specification VARCHAR(20) NOT NULL,
    -- Four Time Period Specification: '2000-2004', '2005-2009', '2010-2014', '2015-2019', '2020-2024'
    CONSTRAINT PK_time_period
        PRIMARY KEY (time_period_specification)
);


-- 3) CONTINENT

CREATE TABLE CONTINENT (
    continent_ID INT NOT NULL,
    -- Assign IDs for each continent, e.g., 1..7
    continent_name ENUM(
        'Asia','Africa','North America','South America',
        'Antarctica','Europe','Australia'
    ) NOT NULL,
    CONSTRAINT PK_continent
        PRIMARY KEY (continent_ID)
);


-- 4) COUNTRY

CREATE TABLE COUNTRY (
    country_ID INT NOT NULL,
    -- Assign IDs for each country from 1-14
    country_name ENUM(
        'China','Japan','The United Kingdom','France','Egypt','Ethiopia',
        'Australia','New Zealand','Canada','The United States of America',
        'Jamaica','Cuba','Brazil','Venezuela'
    ) NOT NULL,
    locates_in_continent_ID INT NOT NULL,
    CONSTRAINT PK_country
        PRIMARY KEY (country_ID),
    CONSTRAINT FK_country_continent
        FOREIGN KEY (locates_in_continent_ID)
        REFERENCES CONTINENT (continent_ID)
);


-- 5) REGION

CREATE TABLE REGION (
    region_ID INT NOT NULL,
    -- region_type is either 'urban' or 'rural'
    region_type ENUM('urban','rural') NOT NULL,
    region_name VARCHAR(100) NOT NULL,
    locates_in_country_ID INT NOT NULL,
    CONSTRAINT PK_region
        PRIMARY KEY (region_ID),
    CONSTRAINT FK_region_country
        FOREIGN KEY (locates_in_country_ID)
        REFERENCES COUNTRY (country_ID)
);


-- 6) DISASTER_TYPE

CREATE TABLE DISASTER_TYPE (
    disaster_type_ID INT NOT NULL,
    -- Possible values: 'Heat Waves','Floods','Forest Fires','Hurricanes','Droughts'
    disaster_type_name ENUM('Heat Waves','Floods','Forest Fires','Hurricanes','Droughts') NOT NULL,
    CONSTRAINT PK_disaster_type
        PRIMARY KEY (disaster_type_ID)
);

-- 7) DISASTER

CREATE TABLE DISASTER (
    disaster_ID INT NOT NULL,
    -- The year the disaster took place
    disaster_year YEAR NOT NULL,
    number_of_missings INT NOT NULL,
    number_of_deaths INT NOT NULL,
    number_of_affected INT NOT NULL,
    -- Which country the disaster occurred in
    happens_in_country_ID INT NOT NULL,
    -- Which disaster type it belongs to
    belongs_to_disaster_type_ID INT NOT NULL,
    -- In which time period specification the disaster is recorded
    happens_in_time_period_specification VARCHAR(20) NOT NULL,
    CONSTRAINT PK_disaster
        PRIMARY KEY (disaster_ID),
    CONSTRAINT FK_disaster_country
        FOREIGN KEY (happens_in_country_ID)
        REFERENCES COUNTRY (country_ID),
    CONSTRAINT FK_disaster_type
        FOREIGN KEY (belongs_to_disaster_type_ID)
        REFERENCES DISASTER_TYPE (disaster_type_ID),
    CONSTRAINT FK_disaster_time_period
        FOREIGN KEY (happens_in_time_period_specification)
        REFERENCES TIME_PERIOD (time_period_specification)
);


-- 8) INDIVIDUAL

CREATE TABLE INDIVIDUAL (
    personal_ID INT NOT NULL,
    -- Possible values: 'male','female','prefer not to say'
    sex ENUM('male','female','prefer not to say') NOT NULL,
    age INT NOT NULL,
    -- Possible values: 'employed','unemployed','below_minimum_legal_work_age'
    employment_status ENUM('employed','unemployed','below_minimum_legal_work_age') NOT NULL,
    below_poverty_line BOOLEAN NOT NULL,
    -- Average time (in hours) spent on unpaid domestic and care work
    average_time_spent_on_unpaid_domestic_and_care_work INT NOT NULL,
    survey_year YEAR NOT NULL,
    -- Which age group this individual belongs to
    belongs_to_age_group_specification VARCHAR(20) NOT NULL,
    -- Which time period specification this individual took the survey
    takes_survey_in_time_period_specification VARCHAR(20) NOT NULL,
    -- Which region ID this individual resides in
    lives_in_region_ID INT NOT NULL,
    CONSTRAINT PK_individual
        PRIMARY KEY (personal_ID),
    CONSTRAINT FK_individual_age_group
        FOREIGN KEY (belongs_to_age_group_specification)
        REFERENCES AGE_GROUP (age_group_specification),
    CONSTRAINT FK_individual_time_period
        FOREIGN KEY (takes_survey_in_time_period_specification)
        REFERENCES TIME_PERIOD (time_period_specification),
    CONSTRAINT FK_individual_region
        FOREIGN KEY (lives_in_region_ID)
        REFERENCES REGION (region_ID)
);
